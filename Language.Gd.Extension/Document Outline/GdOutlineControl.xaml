<UserControl x:Class="Pharmatechnik.Language.Gd.Extension.Document_Outline.GdOutlineControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             Background="{DynamicResource {x:Static vsshell:VsBrushes.WindowKey}}"
             Foreground="{DynamicResource {x:Static vsshell:VsBrushes.WindowTextKey}}"
             mc:Ignorable="d"
             d:DesignHeight="300" 
             d:DesignWidth="300"
             UseLayoutRounding="True">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <TreeView x:Name="TreeView" Grid.Row="0" BorderThickness="0,0,0,0"
                  Background="{DynamicResource {x:Static vsui:TreeViewColors.BackgroundBrushKey}}"
                  BorderBrush="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBorderBrushKey}}">
            <TreeView.Resources>
                <Style x:Key="TreeViewItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <PathGeometry x:Key="ExpandedArrow" Figures="M 5 0 L 0 5 L 5 5 Z" />
                <PathGeometry x:Key="CollapsedArrow" Figures="M 0 0 L 4 4 L 0 8 Z" />
                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="Transparent" />
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource {x:Static vsui:TreeViewColors.GlyphBrushKey}}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="ExpandPathBorder" Width="16" Height="16"
                                        Background="{TemplateBinding Background}">
                                    <Image x:Name="ExpandImage" Margin="5,3,0,0" Stretch="None"
                                           HorizontalAlignment="Left" VerticalAlignment="Top" UseLayoutRounding="True">
                                        <Image.Source>
                                            <DrawingImage>
                                                <DrawingImage.Drawing>
                                                    <GeometryDrawing x:Name="ExpandGeometry"
                                                                     Geometry="{StaticResource CollapsedArrow}"
                                                                     Brush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}">
                                                        <GeometryDrawing.Pen>
                                                            <Pen
                                                                Thickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
                                                                Brush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}" />
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                </DrawingImage.Drawing>
                                            </DrawingImage>
                                        </Image.Source>
                                    </Image>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter TargetName="ExpandImage" Property="Source">
                                            <Setter.Value>
                                                <DrawingImage>
                                                    <DrawingImage.Drawing>
                                                        <GeometryDrawing Geometry="{StaticResource ExpandedArrow}"
                                                                         Brush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}">
                                                            <GeometryDrawing.Pen>
                                                                <Pen
                                                                    Thickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}"
                                                                    Brush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}" />
                                                            </GeometryDrawing.Pen>
                                                        </GeometryDrawing>
                                                    </DrawingImage.Drawing>
                                                </DrawingImage>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="ExpandImage" Property="Margin" Value="4.5,4.5,0,0" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static vsui:TreeViewColors.GlyphBrushKey}}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource {x:Static vsui:TreeViewColors.GlyphMouseOverBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsChecked" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static vsui:TreeViewColors.GlyphMouseOverBrushKey}}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="VerticalContentAlignment"
                            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                    <Setter Property="Padding" Value="1,0,0,0" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowTextBrushKey}}" />
                    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid ShowGridLines="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <ToggleButton x:Name="Expander" 
                                                  ClickMode="Press"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource ExpandCollapseToggleStyle}" />
                                    
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" 
                                            Grid.Column="1" 
                                            Grid.ColumnSpan="2"
                                            Grid.Row="0"
                                            Padding="{TemplateBinding Padding}" 
                                            SnapsToDevicePixels="true">

                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>

                                    <ItemsPresenter x:Name="ItemsHost" 
                                                    Grid.ColumnSpan="2" 
                                                    Grid.Column="1" 
                                                    Grid.Row="1" />
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd"
                                                Value="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveBrushKey}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemActiveTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true" />
                                            <Condition Property="IsSelectionActive" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd"
                                                Value="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemInactiveBrushKey}}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static vsui:TreeViewColors.SelectedItemInactiveTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static vsui:EnvironmentColors.SystemGrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Resources>
        </TreeView>

        <TextBlock x:Name="Watermark"
                   TextWrapping="Wrap"
                   TextAlignment="Center"
                   HorizontalAlignment="Center"
                   Margin="2,10,2,2">
            There are no items to show for the selected document.
        </TextBlock>
    </Grid>
</UserControl>